datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Item {
  id                          Int                      @id @default(autoincrement())
  name                        String?
  description                 String?
  type                        String?
  itemType                    String?
  price                       Float?
  duration                    Float?
  status                      String?
  deleted                     Boolean                  @default(false)
  createdAt                   DateTime                 @default(now())
  inventoryItemsInventoryNeed foodItemsInventoryNeed[]
  OrderItems                  OrderItem[]
}

model InventoryItems {
  id          Int     @id @default(autoincrement())
  name        String?
  description String?
  type        String?
  price       String?
  quantity    String?
  status      String?
  measuredIn  String?

  foodItemsInventoryNeed foodItemsInventoryNeed[]
  deleted                Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
}

model InventoryPurchase {
  id         Int      @id @default(autoincrement())
  name       String?
  amount     String?
  price      String?
  totalPrice String?
  // supplier    String?
  // status      String?
  deleted    Boolean  @default(false)
  createdAt  DateTime @default(now())
}

//this is the model for the food items that are needed in the inventory
model foodItemsInventoryNeed {
  id              Int            @id @default(autoincrement())
  foodItem        Item           @relation(fields: [foodItemId], references: [id])
  foodItemId      Int
  inventoryItem   InventoryItems @relation(fields: [inventoryItemId], references: [id])
  inventoryItemId Int
  quantity        Float

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Waiters {
  id          Int     @id @default(autoincrement())
  firstName   String?
  lastName    String?
  type        String?
  status      String? @default("down")
  email       String? @unique
  password    String?
  phoneNumber String?

  Orders Orders[]

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Orders {
  id                 String      @id @default(uuid())
  WaiterId           Int
  Waiter             Waiters     @relation(fields: [WaiterId], references: [id])
  SpecialDescription String?
  OrderItems         OrderItem[]
  OrderStatus        String?     @default("pending")
  TableNumber        String?     @default("")
  Seen               String      @default("false")

  createdAt DateTime @default(now())
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  OrderId   String
  ItemId    Int
  quantity  Int      @default(1) // Allows storing repeated items
  createdAt DateTime @default(now())

  Order Orders @relation(fields: [OrderId], references: [id])
  Item  Item   @relation(fields: [ItemId], references: [id])
}

// id
// L-waiter
// L-item[]
// totalPrice
// vat
// date
// status
// table
